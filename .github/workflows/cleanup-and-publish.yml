name: Cleanup and Publish Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 24.10-Official-x86-64-1747862648-uefi-f1203c)'
        required: true

jobs:
  cleanup-and-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set environment variables
      run: |
        echo "RELEASE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

    - name: Get release files
      id: get_release_files
      run: |
        TAG_NAME="Update-x86"
        GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        FILES=$(curl -s "https://api.github.com/repos/281677160/autobuild/releases/tags/$TAG_NAME/assets" | jq -r '.[].name' | grep -E '24\.10-Official-x86-64-.*-uefi-.*.img.gz')
        echo "::set-output name=files::$FILES"

    - name: Cleanup old files
      run: |
        TAG_NAME="Update-x86"
        GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
        FILES=${{ steps.get_release_files.outputs.files }}
        
        # Parse the files and delete old ones, keeping the latest one
        LATEST=""
        for FILE in $FILES; do
          TIMESTAMP=$(echo $FILE | sed -E 's/.*-([0-9]+)-uefi-.*/\1/')
          if [ -z "$LATEST" ] || [ "$TIMESTAMP" -gt "$LATEST_TIMESTAMP" ]; then
            LATEST=$FILE
            LATEST_TIMESTAMP=$TIMESTAMP
          else
            curl -X DELETE "https://api.github.com/repos/281677160/autobuild/releases/assets/$(curl -s "https://api.github.com/repos/281677160/autobuild/releases/tags/$TAG_NAME/assets" | jq -r --arg FILE "$FILE" '.[] | select(.name == $FILE) | .id')" -H "Accept: application/vnd.github.v3+json" -H "Authorization: token $GITHUB_TOKEN"
          fi
        done
